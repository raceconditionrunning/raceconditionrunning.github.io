name: Deploy Jekyll site to Pages

on:
  push:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    concurrency: github-pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: pip

      - name: Install Python Dependencies
        run: pip install -r requirements.txt

      - name: Check Schedules
        continue-on-error: false
        run: make check-schedules

      - name: Normalize Routes
        run: make normalize-routes

      - name: Convert Routes to GeoJSON
        run: make convert-routes

      - name: Make Routes Table
        run: make _data/routes.yml

      - name: Build Calendar
        run: make rcc.ics

      - name: Set up Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems

      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: make build
        env:
          JEKYLL_ENV: production
          JEKYLL_FLAGS: --baseurl "${{ steps.pages.outputs.base_path }}"

      - name: Cache HTMLProofer
        id: cache-htmlproofer
        uses: actions/cache@v4
        with:
          path: tmp/.htmlproofer
          key: ${{ runner.os }}-htmlproofer

      - name: Check HTML
        continue-on-error: true
        run: make check-html
        env:
          URL_BASE_PATH: ${{ steps.pages.outputs.base_path }}

      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
